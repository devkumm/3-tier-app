apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:latest  # Replace with the desired WordPress image version/tag
          ports:
            - containerPort: 80
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: MYSQL_ROOT_PASSWORD   # Reference root password from the secret
            - name: WORDPRESS_DB_HOST
              value: db                     # DB service name (ensure your MySQL service is named 'db')
            - name: WORDPRESS_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: MYSQL_DATABASE        # Reference DB name from the secret
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: MYSQL_USER            # Reference DB user from the secret
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: MYSQL_PASSWORD        # Reference DB password from the secret
          volumeMounts:
            - name: wordpress-data
              mountPath: /var/www/html      # Mount the PVC to store WordPress files
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wp                   # Use the existing PVC 'wp' to store WordPress data

